{"version":3,"sources":["App.js","index.js"],"names":["App","useState","size","setSize","indexActive","setIndexActive","className","InputSize","changeSize","e","newSize","target","value","id","rowSize","colSize","MatrixVisualizer","rows","cols","ArrayVisualizer","props","onChange","type","generateArrayOfTrues","map","_","index_row","index_col","onClick","index","array","i","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAGe,SAASA,IACtB,IAGA,EAAwBC,mBAAS,CAHG,EAAG,IAGvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,mBAAS,MAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAOA,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,4BAEA,cAACC,EAAD,CAAWC,WATI,SAACC,GAClB,IAAIC,EAAUD,EAAEE,OAAOC,OANP,GAM4BH,EAAEE,OAAOC,MANrC,GAOA,SAAhBH,EAAEE,OAAOE,GAAgBV,EAAQ,CAACO,EAASR,EAAK,KAAOC,EAAQ,CAACD,EAAK,GAAIQ,KAOpCI,QAASZ,EAAK,GAAIa,QAASb,EAAK,KAEnE,cAACc,EAAD,CAAkBC,KAAMf,EAAK,GAAIgB,KAAMhB,EAAK,GAAIE,YAAaA,EAAaC,eAAgBA,IAC1F,cAACc,EAAD,CAAiBjB,KAAMA,EAAK,GAAKA,EAAK,GAAIE,YAAaA,EAAaC,eAAgBA,OAK1F,SAASE,EAAUa,GACjB,OACE,sBAAKd,UAAU,qBAAf,UACE,uBAAOe,SAAUD,EAAMZ,WAAYc,KAAK,OAAOT,GAAG,OAAOD,MAAOQ,EAAMN,QAASR,UAAU,eACzF,sBAAMA,UAAU,0BAAhB,oBACA,uBAAOe,SAAUD,EAAMZ,WAAYc,KAAK,OAAOT,GAAG,OAAOD,MAAOQ,EAAML,QAAST,UAAU,kBAK/F,SAASU,EAAiBI,GACxB,OACE,qBAAKd,UAAU,mBAAf,SACGiB,EAAqBH,EAAMH,MAAMO,KAAI,SAACC,EAAGC,GAAJ,OACpC,qBAAKpB,UAAU,aAAf,SACGiB,EAAqBH,EAAMF,MAAMM,KAAI,SAACC,EAAGE,GAAJ,OAAkB,qBAAqBrB,UAAWoB,EAAYN,EAAMF,KAAOS,IAAcP,EAAMhB,YAAc,iBAAmB,kBAAmBwB,QAAS,kBAAMR,EAAMf,eAAeqB,EAAYN,EAAMF,KAAOS,KAApLA,OADnCD,QAQzC,SAASP,EAAgBC,GACvB,OACE,qBAAKd,UAAU,kBAAf,SACGiB,EAAqBH,EAAMlB,MAAMsB,KAAI,SAACC,EAAGI,GAAJ,OAAc,qBAAiBvB,UAAWuB,IAAUT,EAAMhB,YAAc,gBAAkB,iBAAkBwB,QAAS,kBAAMR,EAAMf,eAAewB,KAAxHA,QAKpE,SAASN,EAAqBrB,GAE5B,IADA,IAAI4B,EAAQ,GACHC,EAAI,EAAGA,EAAI7B,EAAM6B,IAAKD,EAAME,MAAK,GAC1C,OAAOF,ECvDTG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.680e4f82.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nexport default function App() {\n  const [initialRows, initialCols] = [4, 4]\n  const maxRowCol = 20\n\n  const [size, setSize] = useState([initialRows, initialCols]);\n  const [indexActive, setIndexActive] = useState(null);\n\n  const changeSize = (e) => {\n    let newSize = e.target.value <= maxRowCol ? e.target.value : maxRowCol;\n    e.target.id === \"rows\" ? setSize([newSize, size[1]]) : setSize([size[0], newSize]);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Matrix - Array</h1>\n\n      <InputSize changeSize={changeSize} rowSize={size[0]} colSize={size[1]} />\n\n      <MatrixVisualizer rows={size[0]} cols={size[1]} indexActive={indexActive} setIndexActive={setIndexActive} />\n      <ArrayVisualizer size={size[0] * size[1]} indexActive={indexActive} setIndexActive={setIndexActive} />\n    </div>\n  );\n}\n\nfunction InputSize(props) {\n  return (\n    <div className=\"inputSizeContainer\">\n      <input onChange={props.changeSize} type=\"text\" id=\"rows\" value={props.rowSize} className=\"input-size\" />\n      <span className=\"inputMultiplicationChar\"> Ã— </span>\n      <input onChange={props.changeSize} type=\"text\" id=\"cols\" value={props.colSize} className=\"input-size\" />\n    </div>\n  )\n}\n\nfunction MatrixVisualizer(props) {\n  return (\n    <div className=\"matrix-container\">\n      {generateArrayOfTrues(props.rows).map((_, index_row) => (\n        <div className=\"matrix-row\" key={index_row}>\n          {generateArrayOfTrues(props.cols).map((_, index_col) => <div key={index_col} className={index_row * props.cols + index_col === props.indexActive ? \"matrix-cell on\" : \"matrix-cell off\"} onClick={() => props.setIndexActive(index_row * props.cols + index_col)}></div>)}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nfunction ArrayVisualizer(props) {\n  return (\n    <div className=\"array-container\">\n      {generateArrayOfTrues(props.size).map((_, index) => <div key={index} className={index === props.indexActive ? \"array-cell on\" : \"array-cell off\"} onClick={() => props.setIndexActive(index)}></div>)}\n    </div>\n  )\n}\n\nfunction generateArrayOfTrues(size) {\n  let array = [];\n  for (let i = 0; i < size; i++) array.push(true);\n  return array;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}